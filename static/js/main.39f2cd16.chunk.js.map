{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","useState","name","setName","number","setNumber","inputChange","event","target","value","onSubmit","preventDefault","className","s","form","type","pattern","title","required","onChange","input","button","Filter","ContactList","contacts","onClick","list","map","contact","id","item","initialContacts","App","setContacts","filter","setFilter","filteredContacts","setFilteredContacts","useEffect","savedContacts","JSON","parse","localStorage","getItem","setItem","stringify","toLowerCase","includes","some","alert","prev","concat","nanoid","contDelId","indexOf","parentElement","editedContacts","splice","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.39f2cd16.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport s from './ContactForm.module.css'\r\n\r\n\r\nexport default function ContactForm(){\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const inputChange = (event) => {\r\n      switch(event.target.name){\r\n        case 'name':\r\n          setName(event.target.value)\r\n          break\r\n        case 'number':\r\n          setNumber(event.target.value)\r\n      }\r\n    }\r\n\r\n    \r\n     const formSubmit = (event) => {\r\n        event.preventDefault()\r\n        // const {name, number} = this.state\r\n        // this.props.onSubmit({name, number})\r\n        // this.setState({\r\n        //     name: '',\r\n        //     number: ''\r\n        // })\r\n      }\r\n\r\n        return (\r\n        <form onSubmit = {formSubmit} className ={s.form}>\r\n          <label>\r\n            <h3>Name</h3>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              onChange = {inputChange}\r\n              value = {name}\r\n              className = {s.input}\r\n            />\r\n            <h3>Number</h3>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              onChange = {inputChange}\r\n              value = {number}\r\n              className = {s.input}\r\n            />\r\n          </label>\r\n          <button type = \"submit\" className = {s.button}>Add contact</button>\r\n        </form> \r\n        )\r\n}","import PropTypes from 'prop-types'\r\n\r\nexport default function Filter({onChange, value}){\r\n    return(\r\n        <>\r\n        <p>Find contacts by name</p>\r\n          <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                onChange = {onChange}\r\n                value = {value}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string\r\n}","import PropTypes from 'prop-types'\r\nimport s from './ContactList.module.css'\r\n\r\nexport default function ContactList({contacts, onClick}){\r\n    return(\r\n        <ul className = {s.list}>\r\n            {contacts.map(contact => {\r\n                return(\r\n                    <li key = {contact.id} id = {contact.id} className = {s.item}>\r\n                        <p>{contact.name}: {contact.number}</p>\r\n                        <button onClick = {onClick} className = {s.button}>Delete</button>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n}","import { useState, useEffect } from \"react\";\r\nimport { nanoid } from 'nanoid'\r\n\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\n\r\nconst initialContacts = [\r\n  {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n  {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n  {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n  {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n]\r\n\r\nfunction App(){\r\n\r\n  const [contacts, setContacts] = useState(initialContacts)\r\n  const [filter, setFilter] = useState('')\r\n  const [filteredContacts, setFilteredContacts] = useState([])\r\n\r\n  useEffect(() => {\r\n    const savedContacts = JSON.parse(localStorage.getItem('contacts'))\r\n    if (savedContacts){\r\n      setContacts(savedContacts)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts))\r\n  }, [contacts])\r\n\r\n  useEffect(() => {\r\n    if (filter === ''){\r\n      setFilteredContacts(contacts)\r\n      return\r\n    }\r\n    setFilteredContacts(contacts.filter(contact => {\r\n      return contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    }))\r\n  }, [filter,contacts])\r\n\r\n\r\n  const filterInputChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const formSubmit = (event) => {\r\n    if (contacts.some(contact => {\r\n      return contact.name.toLowerCase() === event.name.toLowerCase()\r\n     })){\r\n       return alert(`${event.name} is already in cotacts`)\r\n     }\r\n\r\n     setContacts(prev => prev.concat({\r\n      id: nanoid(),\r\n      name: event.name,\r\n      number: event.number \r\n     }))\r\n  }\r\n\r\n  const deleteContact = (event) => {\r\n    const contDelId = contacts.map(contact => {\r\n      return contact.id\r\n    }).indexOf(event.target.parentElement.id)\r\n    const editedContacts = [...contacts]\r\n    editedContacts.splice(contDelId, 1)\r\n    setContacts(editedContacts)\r\n  }\r\n\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit = {formSubmit}/>\r\n        <h2>Contacts</h2>\r\n        <Filter onChange={filterInputChange} value = {filter}/>\r\n        <ContactList contacts = {filteredContacts} onClick = {deleteContact}/>\r\n      </>\r\n    )\r\n  \r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZCQOn\",\"input\":\"ContactForm_input__fLfnA\",\"button\":\"ContactForm_button__b-Lz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3klDv\",\"item\":\"ContactList_item__Vgfiy\",\"button\":\"ContactList_button__LBmrO\"};"],"sourceRoot":""}